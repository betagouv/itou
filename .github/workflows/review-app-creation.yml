# See https://developer.github.com/v3/
# and https://help.github.com/en/actions
name: üïµ Review app creation

# Run this pipeline when a label is added and when a push is made on this PR.
# `types: [ synchronize ]` targets a push event made on a PR.
on:
  pull_request:
    types: [ labeled ]

env:
  CLEVER_TOOLS_DOWNLOAD_URL: https://clever-tools.clever-cloud.com/releases/latest/clever-tools-latest_linux.tar.gz
  CLEVER_TAR_FILE: clever-tools-latest_linux.tar.gz
  CLEVER_CLI: clever-tools-latest_linux/clever
  CLEVER_TOKEN: ${{ secrets.CLEVER_TOKEN }}
  CLEVER_SECRET: ${{ secrets.CLEVER_SECRET }}
  ORGANIZATION_NAME: Itou
  DB_ADDON: review_apps_databases_DO_NOT_DELETE
  CONFIGURATION_ADDON: review_apps_config
  BRANCH: ${{ github.head_ref }}
  POSTGRESQL_ADDON_URI: ${{ secrets.POSTGRESQL_ADDON_URI }}
  POSTGRESQL_ADDON_USER: ${{ secrets.POSTGRESQL_ADDON_USER }}

jobs:
  create:
    runs-on: ubuntu-latest
    if: contains( github.event.pull_request.labels.*.name, 'review-app')

    steps:
    - name: üì• Checkout to the PR branch
      uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}

    - name: üì• Fetch git branches
      run: git fetch --prune --unshallow

    # Environment variables
    - name: üè∑ Set review app name
      run:
        echo ::set-env name=REVIEW_APP_NAME::$(echo "review_$BRANCH" | sed -r 's/[-;\\/._]+/-/g')

    - name: üè∑ Set database name
      run:
        echo ::set-env name=REVIEW_APP_DB_NAME::$(echo $REVIEW_APP_NAME | sed -r 's/-/_/g')

    - name: üè∑ Set deploy url
      run:
        echo ::set-env name=DEPLOY_URL::$(echo "$REVIEW_APP_NAME.cleverapps.io")
    # End of environment variables

    - name: üß´ Create a review app on Clever Cloud
      run: |
        curl $CLEVER_TOOLS_DOWNLOAD_URL > $CLEVER_TAR_FILE
        tar -xvf $CLEVER_TAR_FILE
        $CLEVER_CLI login --token $CLEVER_TOKEN --secret $CLEVER_SECRET
        $CLEVER_CLI create $REVIEW_APP_NAME -t docker --org $ORGANIZATION_NAME --region par --alias $REVIEW_APP_NAME
        $CLEVER_CLI domain add $DEPLOY_URL --alias $REVIEW_APP_NAME
        $CLEVER_CLI link $REVIEW_APP_NAME --org $ORGANIZATION_NAME

    - name: ü§ù Link databases addon
      run: |
        $CLEVER_CLI link $REVIEW_APP_NAME --org $ORGANIZATION_NAME
        $CLEVER_CLI service link-addon $DB_ADDON


    - name: üóÉ Create a brand new database
      run: |
        echo "Creating database $REVIEW_APP_DB_NAME"
        psql -v ON_ERROR_STOP=1 $POSTGRESQL_ADDON_URI <<-EOSQL
          CREATE DATABASE $REVIEW_APP_DB_NAME WITH OWNER $POSTGRESQL_ADDON_USER TEMPLATE template1;
        EOSQL
        echo "Database created successfully!"

    - name: üó∫ Add environment variables to the review app
      run: |
        $CLEVER_CLI link $REVIEW_APP_NAME --org $ORGANIZATION_NAME
        $CLEVER_CLI service link-addon $CONFIGURATION_ADDON
        $CLEVER_CLI env import-vars REVIEW_APP_DB_NAME

    - name: üöÄ Deploy to Clever Cloud
      run: $CLEVER_CLI deploy --branch $BRANCH --force --verbose

    - name: üçª Add link to pull request
      uses: thollander/actions-comment-pull-request@master
      with:
        message: "ü•Å La recette jetable est pr√™te ! [üëâ Je veux tester cette PR !](https://${{ env.DEPLOY_URL }})"
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
